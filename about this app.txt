Famigliappってアプリを作りたい

私の家族たち(従業員向けのアプリ)

プライベートコミュニティWebアプリ。

一般販売の予定は無い。

## Current Development Status and Implementation Overview

The Famigliapp project has reached a mature prototype stage. A significant number of core functionalities, as originally envisioned in the detailed specifications below, have been implemented and are accessible through both a Command-Line Interface (CLI) and a Flask-based web application.

Key implemented areas include:
*   **User and Points Management:** The Punto system for tracking and managing user points (AhvPunto, OzePunto, UnitoPunto) is functional, including history, rankings, and admin editing capabilities.
*   **Content Modules/Bulletin Boards:** Various themed boards such as Posts (general), Bravissimo (audio praise), Intrattenimento (entertainment), Corso (seminar feedback), Seminario (lesson feedback), Principessina (baby reports), and Monsignore (image columns) are operational, generally supporting posting, viewing, and filtering.
*   **Interactive Features:** Quest Box for task management, Scatola di Capriccio for private feedback and admin surveys, Vote Box for polls, and Nedari Box for requests are available.
*   **Calendario:** A shared calendar with event management and an advanced shift management system for admins (including rule-based warnings and drag-and-drop assignment) is in place.
*   **Reporting & Analysis:** Resoconto for work reports features daily AI analysis (via Claude API) viewable by admins, CSV export, and user contribution rankings.
*   **Notifications:** Email, LINE Notify, and Pushbullet notifications are integrated for various application events.
*   **Data Storage:** The application primarily uses JSON files for feature-specific data, with SQLAlchemy and a SQLite database managing core user information, generic posts, and points history.

For a comprehensive list of currently implemented features and their details, please refer to the main `README.md` file. The `TODO.md` file outlines planned enhancements, features from the original specification that are still pending or partially implemented, and areas for future work. The general approach has been to build out the features with a focus on functionality, with ongoing efforts to refine the user interface, particularly for the web version.

## Key Development Milestones/History (Recent)

*   Integration of a Flask web interface alongside the original CLI.
*   Implementation of `flask run` compatibility for easier development server startup.
*   Standardization of module naming conventions (e.g., 'Seminario' capitalization).
*   Iterative refinements to CSS for calendar views, shift management UI, and event item display to improve clarity and usability.
*   Ongoing updates to documentation (`README.md`, `TODO.md`) to reflect current project state.

## Future Outlook

The future development of Famigliapp will focus on several key areas, guided by the `TODO.md` document:

*   **Full Specification Alignment:** Completing any remaining aspects of the original "【FamigliApp仕様】" detailed below, particularly around nuanced behaviors in Scatola di Capriccio, Quest Box lifecycle, and reminder systems.
*   **Enhancements:** Improving existing features with more robust file handling (security, previews), user-configurable notifications, deeper Punto integrations, and a more unified and mobile-responsive web UI.
*   **Stability and Performance:** Addressing potential bugs, strengthening error handling, and optimizing performance, especially concerning the use of JSON files for data storage.
*   **Testing and Documentation:** Significantly increasing test coverage (unit, integration, UI) and expanding developer and user documentation.
*   **Refactoring:** Evaluating the long-term data persistence strategy (JSON vs. database), improving code modularity, and enhancing configuration management for security and scalability.

The long-term vision remains to provide a rich, private, and engaging digital environment for the target user group.

---
(Original Detailed Specifications Below)
---

【FamigliApp仕様】



ユーザーは全コンテンツ閲覧にログイン必須。



会員登録機能とかは無し。



こっちであらかじめ、ログインパスワードとユーザーIDを設定。



それをユーザーに配布。



その組み合わせでしかログインできないようにする。



メールアドレスだけ登録必須。通知機能のため。（ほんとはLineに通知が行くようにしたいけど、できないかなあ）





ユーザー権限



ユーザーの役割は2種類設定：

管理者（これは私だけ)：ポイント編集、リクエスト承認、招待コード管理、コンテンツ削除権限あり



ユーザー（user）：投稿、閲覧、コメント、通知受信が可能





常時表示されるナビゲーションメニュー





常に表示されるトップまたはサイドのナビゲーションメニューを設置。



以下のセクションにリンク：



【Punto】 – 評価をポイント制にして、そのポイントを管理。



ポイントに変動があった際にメールで通知。



ユーザー毎に以下のポイントを管理：



AhvPunto（累計Aポイント）



OzePunto（累計Oポイント）



UnitoPunto（A - O、自動計算）



現在のポイント残高表示（A, O）



ポイント推移グラフを表示（期間でフィルタリング可能：全期間, 1年, 6ヶ月, 3ヶ月, 1ヶ月, 1週間）



ポイント値の編集は管理者のみ可能。AかOを入力したら、Uは自動計算されるようにしてほしい。



･週間、月間、年間ポイントランキング、累計ポイントランキング、獲得上昇率ランキングを表示。

これは全員閲覧可能。













【Bravissimo!】 – 音声によるお互いへの褒め言葉のアップロード(アップロードするのは管理者)



ユーザーを指定してアップロード。



アップロードされたユーザーには通知。



日付や、誰からの褒め言葉なのか、誰への褒め言葉なのかで、過去の誉め言葉が絞込みできる。



全員が閲覧、保存可能。





【Scatola di Capriccio】 –



フィードバック、要望の投稿。



投稿とフィードバックはユーザーたちが可能。



内容は管理者だけが見れる。



また、管理者はここにアンケートを投稿できる。(今日みんなにご飯頼むけど何食べたい？みたいな)



対象ユーザーを選んで投稿。



この時、対象に選ばれたユーザーには、全員に通知がいく。







4.Quest Box



他ユーザー及び管理者を指定して、依頼、確認事項を投稿できる。



管理者および全ユーザーが投稿、閲覧可能。



また、管理者は参加条件、期限や報酬(上記Aポイントか、現金)を登録したオーダーを出せる。



ユーザー指定もできる。



指定されたユーザー(誰でもいい場合は指定なしも可能。人数だけ決める。受けたいユーザーが自分で選ぶ。また、複数名指しも可能。)もしくは管理者が、依頼を受ける場合はACCEPTを押して、受理。



進展と結果を報告し、最後は逆に依頼を出したユーザーや管理者が「達成を確認」をクリックして完了。





【Corso】

講座フィードバック



福利厚生でみんなが受けてるセミナーの感想を投稿する掲示板。



全員閲覧可能。



投稿者で絞込み可能。フレーズを検索可能。



セミナーの音声及び動画をここにアップロード可能。



公開期間を決めれる。



公開期間の間はダウンロードもできる。公開期間が過ぎたら、管理者以外による閲覧は不可能になるが、ここにデータは残していつでも再公開できるようにしたいね。



また、あるセミナーに関して、その感想を投稿するまでは、毎日投稿を促す通知が来るようにしたい。



ようは、すべてのセミナーにちゃんと感想を書かせたいということね。





【Seminario】 – レッスンフィードバック



福利厚生でみんなが受けてる習い事の感想を投稿する掲示板。



ユーザーはレッスンを受ける日程などを都度、登録する。



全員閲覧可能。



投稿者で絞込み可能。フレーズを検索可能。



こちらも、登録されたレッスン受講予定日を過ぎた時点から、毎日投稿を促す通知。





【Monsignore】 – コラムフィードバック



ユーザー及び管理者は画像でコラムをアップロードできる。



さらに、それに対する感想を投稿できる。



全員閲覧可能。



コラムのアップロード日で絞込み可能。



フレーズを検索可能。



こちらも、各アップロードされた画像に感想を書くまでは、毎日投稿を促す通知。





【Principessina】 – ベイビー報告



ベビーシッタースタッフによる、子供の状況を投稿するページ。



文章、画像、動画をアップロード可能。



全員閲覧可能。



投稿者で絞込み可能。



フレーズを検索可能。



こちらはユーザー全員に毎日投稿を促す通知。





8･【Calendario】



共有カレンダー。



ユーザーは完成したカレンダーの閲覧、および予定を追記、編集できる。



編集が行われるたびに編集者と、編集内容が全員に通知される。







管理者だけは、以下のような設定ができるシフト管理エリアとして利用できる。



見た目はカレンダー。



登録した従業員名がカレンダー上部に並ぶ。



従業員名をドラッグアンドドロップで、カレンダーの日付の枠内に落とすことで、その日のシフトに追加される。



 一定数連勤以上になったら警告がでる。(何連勤で通知を出すか設定可能)



出勤人数が一定数以下の日があれば警告がでる。(こちらも警告を出す人数を設定可能)

 

特定の誰かのシフトが被っていると警告がでる(どの組み合わせをNGにするか設定可能)



特定の誰かのシフトを被らせていないと警告がでる(どの組み合わせをマストにするか設定可能)



ある属性の人がシフトに入っていなかったら警告がでる(どの属性で警告を出すか設定可能。複数も可能。別であらかじめ各従業員にA、B、C、D属性を設定可能)

 

その時点での勤務日数がカレンダー上部に常に表示される。



その時点での休日数がカレンダー上部に常に表示される。



9.intrattenimento


福利厚生でみんなが受けてる娯楽の感想を投稿する掲示板。



全員閲覧可能。



投稿者で絞込み可能。フレーズを検索可能。



音声及び動画もここにアップロード可能。



公開期間を決めれる。



公開期間の間はダウンロードもできる。公開期間が過ぎたら、管理者以外による閲覧は不可能になるが、ここにデータは残していつでも再公開できるようにしたいね。



また、ここも毎日投稿を促す通知が来るようにしたい。



ようは、すべてのセミナーにちゃんと感想を書かせたいということね。



10.Resoconto

業務報告ページ。

1日の業務内容などを報告する。

毎日午前4時に締め切って、AIがそれぞれの業務内容を精査して、管理者にのみ見えるページに、ランキングと簡単な批評をもって報告する。

実際のポイント配分などは管理者が行う。
